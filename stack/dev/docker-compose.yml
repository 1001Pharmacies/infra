version: "3"

services:
  prometheus:
    build:
      context: docker/prometheus
      args:
        - LATENCYAT_TOKEN=${TOKEN_LATENCYAT}
    labels:
      - SERVICE_9090_NAME=prometheus-http
      - SERVICE_9090_CHECK_TCP=true
      - SERVICE_9090_CHECK_INITIAL_STATUS=passing
      - SERVICE_9090_TAGS=${SERVICE_PROMETHEUS_HTTP_TAGS}
    ports:
      - 9090
    restart: always
    volumes:
        - prometheus:/prometheus
#        - ./docker/prometheus:/etc/prometheus


  alertmanager:
    build: 
      context: docker/alertmanager
      args:
        - SLACK_WEBHOOK_ID=${SLACK_WEBHOOK_ID}
    labels:
      - SERVICE_9093_NAME=alertmanager-http
      - SERVICE_9093_CHECK_TCP=true
      - SERVICE_9093_CHECK_INITIAL_STATUS=passing
      - SERVICE_9093_TAGS=${SERVICE_ALERTMANAGER_HTTP_TAGS}
    ports:
      - 9093
    restart: always
#    volumes:
#      - ./docker/alertmanager/config.tmpl:/etc/alertmanager/config.tmpl


  blackbox:
    image: quay.io/prometheus/blackbox-exporter:latest
    labels:
      - SERVICE_9115_NAME=blackbox-http
      - SERVICE_9115_CHECK_TCP=true
      - SERVICE_9115_CHECK_INITIAL_STATUS=passing
      - SERVICE_9115_TAGS=${SERVICE_BLACKBOX_HTTP_TAGS}
    ports:
      - 9115
  static:
    image: nginx:alpine
    command: /bin/sh -c "sed -i 's|index  index.html index.htm;|index  index.html index.htm;\n        autoindex on;|' /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    labels:
      - SERVICE_80_NAME=static-http
      - SERVICE_80_CHECK_TCP=true
      - SERVICE_80_CHECK_INITIAL_STATUS=passing
      - SERVICE_80_TAGS=${SERVICE_STATIC_HTTP_TAGS}
    ports:
      - 80
    restart: always
    volumes:
      - static:/usr/share/nginx/html:ro
  grafana:
    image: grafana/grafana:latest
    env_file:
      - .env
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    labels:
      - SERVICE_3000_NAME=grafana-http
      - SERVICE_3000_CHECK_TCP=true
      - SERVICE_3000_CHECK_INITIAL_STATUS=passing
      - SERVICE_3000_TAGS=${SERVICE_GRAFANA_HTTP_TAGS}
    ports:
      - 3000
    volumes:
        - grafana:/var/lib/grafana
    restart: always
  redmine:
    image: redmine
    #    crontab is not available in redmine image
    #    command: /bin/sh -c '(crontab -u redmine -l \
    #                             |grep -v "cd /usr/src/redmine/files/1001Pharmacies && git fetch -q --all -p" \
    #                             |grep -v "cd /usr/src/redmine && ruby script/runner Repository.fetch_changesets -e production" \
    #                             && echo "* * * * * cd /usr/src/redmine/files/1001Pharmacies && git fetch -q --all -p" \
    #                             && echo "* * * * * sleep 10 && cd /usr/src/redmine && ruby script/runner Repository.fetch_changesets -e production" \
    #                         ) |crontab -u redmine - \
    #                         && rake server && rails server -b 0.0.0.0'
    environment:
      - REDMINE_DB_MYSQL=mysql
      - REDMINE_DB_DATABASE=redmine
      - REDMINE_DB_USERNAME=redmine
      - REDMINE_DB_PASSWORD=redmine
    labels:
      - SERVICE_3000_NAME=redmine-http
      - SERVICE_3000_CHECK_TCP=true
      - SERVICE_3000_CHECK_INITIAL_STATUS=passing
      - SERVICE_3000_TAGS=${SERVICE_REDMINE_HTTP_TAGS}
    ports:
      - 3000
    restart: always
    volumes:
        - ./docker/redmine/config/configuration.yml:/usr/src/redmine/config/configuration.yml
        - redmine:/usr/src/redmine/files
        - redmine-plugins:/usr/src/redmine/plugins
  opendj:
    build: docker/opendj
    environment:
      - OPENDJ_JAVA_ARGS=-server -Xmx512m -XX:+UseG1GC
    ports:
      - 389:389
    volumes:
      - opendj:/opt/opendj/data
      - opendj-secrets:/var/secrets/opendj
  pdns-recursor:
    build: docker/pdns-server
    command: /usr/local/sbin/pdns_recursor --local-address='192.168.1.1:53' --allow-from='127.0.0.0/8, 192.168.1.0/24' --forward-zones='1001pharmacies.net=192.168.1.254'
    image: pdns:alpine
    labels:
      - SERVICE_53_NAME=pdns-recursor-dns
      - SERVICE_53_CHECK_TCP=true
      - SERVICE_53_CHECK_INITIAL_STATUS=passing
    restart: always
    network_mode: host

volumes:
    grafana:
    opendj:
    opendj-secrets:
    prometheus:
    redmine:
    redmine-plugins:
    static:

networks:
  default:
    external:
      name: ${DOCKER_NETWORK}

