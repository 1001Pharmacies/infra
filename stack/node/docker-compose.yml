version: "3"

services:
    consul:
        image: consul:latest
        labels:
          - SERVICE_8300_IGNORE=true
          - SERVICE_8301_IGNORE=true
          - SERVICE_8302_IGNORE=true
          - SERVICE_8500_NAME=node-infra-consul-admin-http
          - SERVICE_8500_CHECK_TCP=true
          - SERVICE_8500_CHECK_INITIAL_STATUS=passing
          - SERVICE_8500_TAGS=${SERVICE_CONSUL_HTTP_TAGS}
          - SERVICE_8600_IGNORE=true
        ports:
          - 8500
        restart: always
        volumes:
          - consul:/consul/data
    fabio:
        command: /fabio -registry.backend "consul" -registry.consul.addr "consul:8500" -proxy.addr ":80,:443;cs=local" -proxy.cs "cs=local;type=file;cert=/certs/${SSL_HOSTNAME}.crt;key=/certs/${SSL_HOSTNAME}.key"
        depends_on:
          - consul
        image: fabiolb/fabio:latest
        labels:
          - SERVICE_80_NAME=node-infra-fabio-lb-http
          - SERVICE_80_CHECK_TCP=true
          - SERVICE_80_CHECK_INITIAL_STATUS=passing
          - SERVICE_443_NAME=node-infra-fabio-lb-https
          - SERVICE_443_CHECK_TCP=true
          - SERVICE_443_CHECK_INITIAL_STATUS=passing
          - SERVICE_9998_NAME=node-infra-fabio-admin-http
          - SERVICE_9998_CHECK_TCP=true
          - SERVICE_9998_CHECK_INITIAL_STATUS=passing
          - SERVICE_9998_TAGS=${SERVICE_FABIO_ADMIN_HTTP_TAGS}
          - SERVICE_9999_IGNORE=true
        ports:
          - 80:80
          - 443:443
          - 9998
        restart: always
        volumes:
          - ssl-certs:/certs
    registrator:
        command: -internal consul://consul:8500
        depends_on:
            - consul
        image: gliderlabs/registrator:latest
        restart: always
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock

volumes:
    consul:
    ssl-certs:

networks:
    default:
        external:
            name: ${DOCKER_NETWORK}
