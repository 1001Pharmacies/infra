---

- name: 'Install AWS CLI'
  tags: 'aws-cli'
  become: 'yes'
  pip: >
    executable=pip
    name=awscli
    state=latest

- name: 'Install docker python'
  tags: 'aws'
  become: 'yes'
  pip: >
    name=docker
    state=latest

- name: 'Install boto python'
  tags: 'aws'
  become: 'yes'
  pip: >
    name=boto3
    state=latest

- name: Set home directory of the user
  set_fact:
    home_dir: /home/{{ aws_cli_user }}
  when: "not aws_cli_user == 'root'"

- name: Set home directory for root
  set_fact:
    home_dir: /root
  when: "aws_cli_user == 'root'"

- name: 'Create the AWS config directory'
  tags: 'aws-cli'
  become: 'yes'
  file: >
    path={{ home_dir }}/.aws
    state=directory
    owner={{ aws_cli_user }}
    group={{ aws_cli_group }}
    mode=0755

- name: 'Copy AWS CLI config'
  tags: 'aws-cli'
  become: 'yes'
  template: >
    src=aws_cli_config.j2
    dest={{ home_dir }}/.aws/config
    owner={{ aws_cli_user }}
    group={{ aws_cli_group }}
    mode=0600
    force=yes

- name: 'Copy AWS CLI credentials'
  tags: 'aws-cli'
  become: 'yes'
  template: >
    src=aws_cli_credentials.j2
    dest={{ home_dir }}/.aws/credentials
    owner={{ aws_cli_user }}
    group={{ aws_cli_group }}
    mode=0600
    force=yes

- name: aws - check AWS meta-data URI
  uri:
    url: http://169.254.169.254/latest/meta-data
    timeout: 1
  register: aws_uri_check
  failed_when: False

- name: aws - get instance metadata
  tags: 'aws'
  ec2_metadata_facts:
  when: aws_uri_check.status == 200

- name: aws - get instance tags
  tags: 'aws'
  ec2_tag:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ ansible_ec2_placement_region }}"
    resource: "{{ ansible_ec2_instance_id }}"
    state: list
  register: ec2_tags
  when: ansible_ec2_instance_id is defined

- name: aws - ecr login
  shell: "$(aws ecr get-login --region {{ aws_region }} |sed 's/ -e none//')"
  tags: 'aws'
  when: ec2_tags.tags is defined

- name: Launch docker container
  docker_container:
    image: '261323802359.dkr.ecr.eu-west-1.amazonaws.com/{{ec2_tags.tags.user}}/{{item}}'
    name: '{{ec2_tags.tags.user}}_{{ec2_tags.tags.env}}_{{item|replace("/","_")}}'
    restart_policy: always
  tags: 'aws'
  with_items: '{{ec2_tags.tags.app.split(" ")}}'
  when: ec2_tags.tags is defined
